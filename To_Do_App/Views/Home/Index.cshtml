@model IEnumerable<To_Do_App.Models.Todo>
@using To_Do_App.Models

@{
    ViewData["Title"] = "Home Page";
}

<div class="container my-4">
    <main role="main" class="pb-3">
        <div class="container">
            <div class="row">
                <div class="text-center col-12">
                    <h1 class="text-center" style="background-color:aqua">My Tasks</h1>
                </div>
            </div>

            <div class="row my-3">
                <div class="col-3">
                    <h1>Filtering</h1>
                    <form asp-action="Index" asp-controller="Home" method="get">
                        <div class="my-3">
                            <span>Category</span>
                            <select name="CategoryId" asp-items="@(new SelectList(ViewBag.Categories, "Id", "Name", ViewBag.SelectedFilter?.CategoryId))">
                                <option value="">All</option>
                            </select>
                        </div>

                        <div class="my-3">
                            <span>Status:</span>
                            <select name="StatusId" asp-items="@(new SelectList(ViewBag.Statuses, "Id", "Name", ViewBag.SelectedFilter?.StatusId))">
                                <option value="">All</option>
                            </select>
                        </div>

                        <div class="my-5">
                            <div class="d-flex flex-row">
                                <button type="submit" class="btn btn-primary me-2">Filter</button>
                                <button type="button" class="btn btn-secondary" onclick="clearFilters()">Clear</button>
                            </div>
                        </div>
                    </form>
                </div>

                <div class="col-9 text-center">
                    <table class="table">
                        <thead>
                            <tr>
                                <th>Description</th>
                                <th>Date</th>
                                <th>Category</th>
                                <th>Status</th>
                                <th class="m-1">Change Status</th>
                                <th>Edit</th>
                                <th>Delete</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var todo in Model)
                            {
                                <tr>
                                    <td>@todo.Description</td>
                                    <td>@todo.Date.ToString("yyyy-MM-dd")</td>
                                    <td>@todo.Category?.Name</td>
                                    <td>@todo.GetStatus.Name</td>
                                    <td>
                                        <form asp-action="Change" method="post">
                                            @Html.AntiForgeryToken()
                                            <input type="hidden" name="id" value="@todo.Id" />
                                            <input type="checkbox"
                                                   class="form-check-input"
                                                   checked="@todo.IsOpened"
                                                   onchange="this.form.submit()" />
                                        </form>
                                    </td>
                                    <td>
                                        <a asp-action="Edit" asp-route-id="@todo.Id" class="btn btn-warning btn-sm">Edit</a>
                                    </td>
                                    <td>
                                        <button class="btn btn-danger btn-sm" onclick="openDeleteModal('@todo.Id', '@todo.Description')">Delete</button>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>

                    <div class="my-5">
                        <div class="d-flex flex-row">
                            <a asp-action="Create" class="btn btn-primary me-2">Add New Task</a>
                            <a asp-action="ClearCompleted" asp-controller="Home" class="btn btn-danger">Clear Completed</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </main>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteModalLabel">Confirm Deletion</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete the task "<span id="todoDescription"></span>"?
            </div>
            <div class="modal-footer">
                <form id="deleteForm" method="post" action="@Url.Action("DeleteConfirmed", "Home")">
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="id" id="todoId" />
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-danger">Delete</button>
                </form>

            </div>
        </div>
    </div>
</div>

<script>
    function clearFilters() {
        // Reset the category and status dropdowns to their default values
        document.querySelector('select[name="CategoryId"]').selectedIndex = 0;
        document.querySelector('select[name="StatusId"]').selectedIndex = 0;

        // Optionally, submit the form to refresh the task list
        document.getElementById('filterForm').submit();
    }

    function openDeleteModal(id, description) {
        document.getElementById("todoId").value = id;
        document.getElementById("todoDescription").innerText = description;
        var myModal = new bootstrap.Modal(document.getElementById('deleteModal'), {
            keyboard: false
        });
        myModal.show();
    }
</script>

<!-- Include Bootstrap JavaScript if not already included -->
